{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dcsitechdatafactory01"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"LS_adventureworks2017_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_adventureworks2017'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PersonPersonEmployeeFilter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PersonPersonEmployeeFilter",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PersonPersonEmployeeFilter",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Person": {},
									"PersonOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PersonPersonEmployeeFilter')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonPersonOrderAscend')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PersonPersonOrderAscend",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PersonPersonOrderAscend",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Person": {},
									"PersonOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PersonPersonOrderAscend')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AW_Person')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adventureworks2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonType",
						"type": "nchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "EmailPromotion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdditionalContactInfo",
						"type": "xml"
					},
					{
						"name": "Demographics",
						"type": "xml"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Person",
					"table": "Person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adventureworks2017')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adventureworks2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Person",
					"table": "Output"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adventureworks2017')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adventureworks2017')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LS_adventureworks2017_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonPersonEmployeeFilter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AW_Person",
								"type": "DatasetReference"
							},
							"name": "Person"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PersonOutput",
								"type": "DatasetReference"
							},
							"name": "PersonOutput"
						}
					],
					"transformations": [
						{
							"name": "BusinessEntityIdSorter"
						},
						{
							"name": "FilterEmployees"
						}
					],
					"scriptLines": [
						"source(output(",
						"          BusinessEntityID as integer,",
						"          PersonType as string,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          EmailPromotion as integer,",
						"          AdditionalContactInfo as string,",
						"          Demographics as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Person",
						"FilterEmployees sort(asc(BusinessEntityID, true)) ~> BusinessEntityIdSorter",
						"Person filter(PersonType==\"EM\") ~> FilterEmployees",
						"BusinessEntityIdSorter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          BusinessEntityID,",
						"          PersonType,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          EmailPromotion,",
						"          AdditionalContactInfo,",
						"          Demographics,",
						"          rowguid,",
						"          ModifiedDate",
						"     )) ~> PersonOutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AW_Person')]",
				"[concat(variables('factoryId'), '/datasets/PersonOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PersonPersonOrderAscend')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AW_Person",
								"type": "DatasetReference"
							},
							"name": "Person"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "PersonOutput",
								"type": "DatasetReference"
							},
							"name": "PersonOutput"
						}
					],
					"transformations": [
						{
							"name": "BusinessEntityIdSorter"
						}
					],
					"scriptLines": [
						"source(output(",
						"          BusinessEntityID as integer,",
						"          PersonType as string,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          EmailPromotion as integer,",
						"          AdditionalContactInfo as string,",
						"          Demographics as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Person",
						"Person sort(asc(BusinessEntityID, true)) ~> BusinessEntityIdSorter",
						"BusinessEntityIdSorter sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          BusinessEntityID,",
						"          PersonType,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          EmailPromotion,",
						"          AdditionalContactInfo,",
						"          Demographics,",
						"          rowguid,",
						"          ModifiedDate",
						"     )) ~> PersonOutput"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AW_Person')]",
				"[concat(variables('factoryId'), '/datasets/PersonOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salestostg')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesPerson",
								"type": "DatasetReference"
							},
							"name": "SalesPerson"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SalesPersonStaging",
								"type": "DatasetReference"
							},
							"name": "Staging"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          BusinessEntityID as integer,",
						"          TerritoryID as integer,",
						"          SalesQuota as decimal(19,4),",
						"          Bonus as decimal(19,4),",
						"          CommissionPct as decimal(10,4),",
						"          SalesYTD as decimal(19,4),",
						"          SalesLastYear as decimal(19,4),",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select   a.*, (SELECT CurbusDt   FROM [AdventureWorks2017].[Sales].[businessPersonDC]\\nwhere RunID=(Select MAX(RunID) from [AdventureWorks2017].[Sales].[businessPersonDC])) AS ReportingDate\\nfrom [AdventureWorks2017].[Sales].[SalesPerson] a\\nWHERE a.ModifiedDate <= (SELECT CurbusDt   FROM [AdventureWorks2017].[Sales].[businessPersonDC]\\nwhere RunID=(Select MAX(RunID) from [AdventureWorks2017].[Sales].[businessPersonDC]))',",
						"     format: 'query') ~> SalesPerson",
						"SalesPerson sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Staging"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesPerson')]",
				"[concat(variables('factoryId'), '/datasets/SalesPersonStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesPerson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adventureworks2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Bonus",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CommissionPct",
						"type": "smallmoney",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "SalesYTD",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesLastYear",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "SalesPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adventureworks2017')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesPersonStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adventureworks2017",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "Sales",
					"table": "Person"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adventureworks2017')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}